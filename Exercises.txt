1.3-Ստեղծեք ֆունկցիա, որը որպես արգումենտ ստանում է երեք թվեր և
վերադարձնում է դրանցից երկու մեծագույնների քառակուսիների գումարը։
1.5- Ստեղծել ֆունկցիա, որը ստանում է երկու թվային արգումենտ` a և b, և
վերադարձնում է a-ից մինչև b ընկած ամբողջ թվերի գումարը։ Կարող եք
ենթադրել, որ առաջին արգումենտը միշտ փոքր է երկրորդից։
1.6-Իրականացնել նախորդ վարժությունում տրված ֆունկցիան՝ հաշվի առնելով, որ
առաջին արգումենտը կարող է մեծ լինել երկրորդից։ Այդ դեպքում ֆունկցիան
պետք է վերադարձնի b-ից մինչև a ամբողջ թվերի գումարը։ 
1.7-def pow(m, n):
    res = 1
    count = 0
    while count < n:
        res = res * m
        count = count + 1
    return res
Իրականացնել pow(a, b) ֆունկցիան՝ հաշվի առնելով, որ b-ն կարող է լինել նաև
ոչ դրական։
1.8-Նյուտոնի մեթոդը խորանարդ արմատ հաշվելու համար հիմնված է հետևյալ
քայլերի վրա. եթե n-ը m թվի մոտարկված արմատն է, ապա մենք կարող ենք էլ
ավելի բարելավել մոտարկումը հետևայլ քայլով
((m / (n ** 2)) + (2 * n)) / 3
Այս բանաձևով ստեղծեք ֆունկցիա, որը հաշվում է թվի խորանարդ արմատը։
1.11-f ֆունկցիան սահմանվում է հետևայլ կերպ.
f(n) = n, եթե n < 3
f(n) = f(n - 1) + f(n - 2) + f(n - 3), եթե n >= 3
n-ը կարող է լինել միայն 0 և դրական ամբողջ թիվ։ Իրականացրեք լուծումը
ռեկուրսիվ, իտերատիվ տարբերակներով։
1.12-Եռանկյան կողմերում գտնվող բոլոր թվերը հավասար են 1-ի, իսկ եռանկյան
ներսում գտնվող թվերից յուրաքանչյուրը հավասար է նրա վերևի երկու թվերի
գումարին։ Գրեք ռեկուրսիվ ֆունկցիա, որը հաշվում է Պասկալի եռանկյունու
անդամի արժեքը։

